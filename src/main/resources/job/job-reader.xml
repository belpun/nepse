<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
 
  <bean id="company" class="com.nepse.domain.Company" scope="prototype" />
  
  <batch:job id="CompanyLoadJob">
	<batch:step id="CompanyLoadJobStep1" next="CompanyLoadJobStep2">
	  <batch:tasklet>
		<batch:chunk reader="companyReader" writer="genericEntityWriter"
			commit-interval="10">
		</batch:chunk>
	  </batch:tasklet>
	</batch:step>
	
	<batch:step id="CompanyLoadJobStep2">
	  <batch:tasklet>
		<batch:chunk reader="multiResourceReader" writer="companyDataWriter"
			commit-interval="10">
		</batch:chunk>
	  </batch:tasklet>
	</batch:step>
	
  </batch:job>
 
  <bean id="companyReader" class="org.springframework.batch.item.file.FlatFileItemReader">
 
	<!-- Read a csv file -->
	<property name="resource" value="classpath:companySymbol.csv" />
	<property name="linesToSkip" value="1" />
 
	<property name="lineMapper">
		<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		  <!-- split it -->
		  <property name="lineTokenizer">
		        <bean
			  class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
				<property name="names" value="name,symbol" />
			</bean>
		  </property>
		  <property name="fieldSetMapper">   
		         <!-- return back to reader, rather than a mapped object. -->
		         <!--
			 <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
		          --> 
			  <!-- map to an object -->
			  <bean
			    class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
				<property name="prototypeBeanName" value="company" />
			  </bean>			
		  </property>
 
		  </bean>
	  </property>
 
  </bean>
  
  <bean id="companyDataWriter" class="com.nepse.loader.CompanyDataWriter" />
  <bean id="genericEntityWriter" class="com.nepse.batch.GenericWriter" />
  
	<bean id="multiResourceReader"
		class=" org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="classpath:companyData*.csv" />
		<property name="delegate" ref="flatFileItemReader" />
	</bean>
	
 	<bean id="flatFileItemReader" 
        class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="linesToSkip" value="1" />
	<property name="lineMapper">
	  <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer">
		    <bean 
                    class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
				<property name="names" value="Date,No.of Transaction,Total Share,Amount,Max.price,Min.price,Closing Price" />
		    </bean>
		</property>
		<property name="fieldSetMapper" ref="companyDataMapper"/>
	  </bean>
	</property>
  </bean>
  
  <bean id="companyDataMapper" class="com.nepse.loader.CompanyDataMapper">
		<property name="reader" value="#{multiResourceReader}" />
<!-- 		<property name="resource" value="#{stepExecutionContext['fileName']}" /> -->
	</bean>
 
<!--   <bean id="databaseItemWriter" -->
<!-- 	class="org.springframework.batch.item.database.JdbcBatchItemWriter"> -->
<!-- 	<property name="dataSource" ref="dataSource" /> -->
<!-- 	<property name="sql"> -->
<!-- 	  <value> -->
<!--             <![CDATA[         -->
<!--             	insert into Company(name,symbol)  -->
<!-- 			values (:name, :symbol) -->
<!--             ]]> -->
<!-- 	  </value> -->
<!-- 	</property> -->
<!-- 	 It will take care matching between object property and sql name parameter  -->
<!-- 	<property name="itemSqlParameterSourceProvider"> -->
<!-- 		<bean -->
<!-- 		class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" /> -->
<!-- 	</property> -->
<!--   </bean> -->
 
</beans>